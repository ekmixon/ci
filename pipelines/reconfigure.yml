resource_types:
- name: slack-notifier
  type: registry-image
  source: {repository: mockersf/concourse-slack-notifier}

- name: pull-request
  type: registry-image
  source: {repository: aoldershaw/github-pr-resource}

resources:
- name: pipelines-and-tasks
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/ci
    paths:
    - pipelines
    - tasks

- name: pr-pipeline
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/ci
    paths:
    - pipelines/pr.yml

- name: teams
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/ci
    paths:
    - teams

- name: booklit-ci
  type: git
  icon: github
  source:
    uri: https://github.com/vito/booklit
    paths: [ci]

- name: concourse-for-k8s
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal/concourse-for-k8s.git
    private_key: ((concourse_for_k8s_token))
    paths:
    - ci

- name: dex-ci
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/dex
    branch: maintenance
    paths: [ci]

- name: docs-ci
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/docs
    paths: [ci]

- name: greenpeace
  type: git
  icon: github
  source:
    uri: git@github.com:concourse/greenpeace.git
    paths: [pipelines, tasks]
    private_key: ((greenpeace_private_key))

- name: resource-types-website-ci
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/resource-types-website
    paths: [ci]

- name: ruby-alpine-image
  type: registry-image
  source:
    repository: ruby
    tag: rc-alpine

- name: oxygen-mask
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/oxygen-mask

- name: examples
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/examples
    paths: [pipelines]

- name: notify
  type: slack-notifier
  icon: slack
  source:
    url: ((slack_hooks.concourse-private))

- name: latest-concourse
  type: github-release
  source:
    owner: concourse
    repository: concourse
    access_token: ((concourse_github_dummy.access_token))

- name: concourse-prs
  type: pull-request
  check_every: 2m
  source:
    repository: concourse/concourse
    access_token: ((pull_requests_access_token))
    base_branch: master

jobs:
- name: reconfigure-self
  plan:
  - get: pipelines-and-tasks
    trigger: true
  - set_pipeline: self
    file: pipelines-and-tasks/pipelines/reconfigure.yml

- name: reconfigure-teams
  plan:
  - get: pipelines-and-tasks
    passed: [reconfigure-self]
  - get: teams
    trigger: true
  - task: reconfigure
    file: pipelines-and-tasks/tasks/reconfigure-teams.yml
    params:
      ADMIN_USERNAME: ((concourse.username))
      ADMIN_PASSWORD: ((concourse.password))
      CONCOURSE_URL: ((concourse.url))

- name: reconfigure-greenpeace
  plan:
  - get: pipelines-and-tasks
    passed: [reconfigure-self]
  - get: greenpeace
    trigger: true
  - task: render-greenpeace-pipeline
    file: greenpeace/tasks/render-ytt.yml
    params:
      ARGS: -v cluster=dispatcher -f greenpeace/pipelines/greenpeace.yml -f greenpeace/pipelines/data.yml
  - set_pipeline: dispatcher-greenpeace
    file: rendered/pipeline.yml

- name: reconfigure-promote
  plan:
  - get: pipelines-and-tasks
    trigger: true
    passed: [reconfigure-self]
  - get: latest-concourse
    trigger: true
  # - load_var: release-version
  #   file: latest-concourse/version
  #
  # workaround for https://github.com/concourse/concourse/issues/5709
  - task: prep-var-files
    config:
      platform: linux

      image_resource:
        type: registry-image
        source: {repository: ubuntu}

      inputs:
      - name: latest-concourse

      outputs:
      - name: vars

      run:
        path: bash
        args:
        - -exc
        - |
          echo "release_version: $(cat latest-concourse/version)" >> vars/vars.yml
  - set_pipeline: promote
    file: pipelines-and-tasks/pipelines/promote.yml
    var_files:
    - vars/vars.yml

- name: reconfigure-resource-pipelines
  plan:
  - get: pipelines-and-tasks
    trigger: true
    passed: [reconfigure-self]
  - task: render-resource-templates
    file: pipelines-and-tasks/tasks/render-resource-pipeline-templates.yml
    params:
      RESOURCES: &resources
      - git
      - time
      - docker-image
      - registry-image
      - cf
      - bosh-io-release
      - bosh-io-stemcell
      - tracker
      - hg
      - github-release
      - semver
      - s3
      - pool
      - datadog-event
      - mock
    input_mapping: {pipelines: pipelines-and-tasks}
  - across:
    - var: type
      values: *resources
      max_in_flight: all
    set_pipeline: resource
    instance_vars: {type: ((.:type))}
    file: rendered_pipelines/((.:type)).yml

- name: unit
  plan:
  - get: pipelines-and-tasks
    trigger: true
    passed: [reconfigure-self]
  - task: unit
    file: pipelines-and-tasks/tasks/ci-unit.yml
    input_mapping: {ci: pipelines-and-tasks}
  on_failure: &notify
    put: notify
    params:
      mode: normal
      alert_type: failed

- name: reconfigure-pipelines
  plan:
  - in_parallel:
    - get: pipelines-and-tasks
      trigger: true
      passed: [unit]
    - get: booklit-ci
      trigger: true
    - get: concourse-for-k8s
      trigger: true
    - get: dex-ci
      trigger: true
    - get: docs-ci
      trigger: true
    - get: resource-types-website-ci
      trigger: true
  - in_parallel:
    - set_pipeline: concourse
      file: pipelines-and-tasks/pipelines/concourse.yml
    - set_pipeline: helm-chart
      file: pipelines-and-tasks/pipelines/helm-chart.yml
    - set_pipeline: helm-prs
      file: pipelines-and-tasks/pipelines/helm-prs.yml
      instance_vars:
        branch: master
      vars:
        concourse_base_branch: master
        concourse_image_name: concourse/concourse
        concourse_image_tag: latest
    - set_pipeline: helm-prs
      file: pipelines-and-tasks/pipelines/helm-prs.yml
      instance_vars:
        branch: dev
      vars:
        concourse_base_branch: master
        concourse_image_name: concourse/concourse-rc
        concourse_image_tag: latest
    - set_pipeline: docs-prs
      team: contributor
      file: docs-ci/ci/prs-pipeline.yml
    - set_pipeline: dutyfree
      team: dutyfree
      file: resource-types-website-ci/ci/pipeline.yml
    - set_pipeline: booklit
      file: booklit-ci/ci/pipeline.yml
    - set_pipeline: update-dex
      file: dex-ci/ci/pipeline.yml
    - set_pipeline: release-6.7.x
      file: pipelines-and-tasks/pipelines/release.yml
      vars:
        release_major: '6'
        release_minor: '6.7'
        latest_release: '6.6'
        concourse_smoke_deployment_name: concourse-smoke-6-7
        slack_hook: ((slack_hooks.concourse-private))
        resource_type_versions:
          bosh-io-release: ~1.0.5
          bosh-io-stemcell: ~1.0.5
          cf: ~1.1.3
          docker-image: ~1.5.5
          git: ~1.12.3
          github-release: ~1.5.4
          hg: ~1.2.4
          mock: ~0.11.3
          pool: ~1.1.7
          registry-image: ~0.14.2
          s3: ~1.1.2
          semver: ~1.2.3
          time: ~1.4.1
          tracker: ~1.0.6
    - set_pipeline: release
      file: pipelines-and-tasks/pipelines/release.yml
      instance_vars:
        version: 7.3.x
      vars:
        release_major: '7'
        release_minor: '7.3'
        latest_release: '7.2'
        concourse_smoke_deployment_name: concourse-smoke-7-3
        slack_hook: ((slack_hooks.concourse-interrupt))
        resource_type_versions:
          bosh-io-release: ~1.1.0
          bosh-io-stemcell: ~1.1.0
          cf: ~1.1.2
          docker-image: ~1.6.0
          git: ~1.13.0
          github-release: ~1.6.1
          hg: ~1.2.3
          mock: ~0.11.2
          pool: ~1.1.6
          registry-image: ~1.3.0
          s3: ~1.1.1
          semver: ~1.3.1
          time: ~1.6.0
          tracker: ~1.0.5
    - set_pipeline: release
      file: pipelines-and-tasks/pipelines/release.yml
      instance_vars:
        version: 7.4.x
      vars:
        release_major: "7"
        release_minor: "7.4"
        latest_release: "7.3"
        concourse_smoke_deployment_name: "concourse-smoke-7-4"
        slack_hook: ((slack_hooks.concourse-private))
        resource_type_versions:
          bosh-io-release: ""
          bosh-io-stemcell: ""
          cf: ""
          docker-image: ""
          git: ""
          github-release: ""
          hg: ""
          mock: ""
          pool: ""
          registry-image: ""
          s3: ""
          semver: ""
          time: ""
          tracker: ""
    # TEMPLATE FOR NEXT RELEASE
    # to create a new release pipeline, copy (but don't delete!) this template,
    # replacing MAJOR, MINOR, PREV_MAJOR, PREV_MINOR, and SLACK_CHANNEL
    # accordingly.
    #
    # Note: you can leave the resource_type_versions as "" - these values will
    # be updated appropriately when the release is shipped
    #
    # - set_pipeline: release
    #   file: pipelines-and-tasks/pipelines/release.yml
    #   instance_vars:
    #     version: MAJOR.MINOR.x
    #   vars:
    #     release_major: "MAJOR"
    #     release_minor: "MAJOR.MINOR"
    #     latest_release: "PREV_MAJOR.PREV_MINOR"
    #     concourse_smoke_deployment_name: "concourse-smoke-MAJOR-MINOR"
    #     slack_hook: ((slack_hooks.SLACK_CHANNEL))
    #     resource_type_versions:
    #       # These should be left blank, as they will be updated after the release has shipped!
    #       bosh-io-release: ""
    #       bosh-io-stemcell: ""
    #       cf: ""
    #       docker-image: ""
    #       git: ""
    #       github-release: ""
    #       hg: ""
    #       mock: ""
    #       pool: ""
    #       registry-image: ""
    #       s3: ""
    #       semver: ""
    #       time: ""
    #       tracker: ""
    - set_pipeline: enterprise-helm-chart
      file: concourse-for-k8s/ci/pipeline.yml
      vars:
        concourse_chart_branch: release/6.7.x
    - set_pipeline: branch
      file: pipelines-and-tasks/pipelines/branch.yml
      instance_vars:
        branch: rewrite-atc-worker
      vars:
        branch_slug: rewrite-atc-worker
    - set_pipeline: branch
      file: pipelines-and-tasks/pipelines/branch.yml
      instance_vars:
        branch: plan-refactor
      vars:
        branch_slug: plan-refactor
    - set_pipeline: infrastructure-report
      file: pipelines-and-tasks/pipelines/infrastructure-report.yml
    on_failure: *notify
    on_error: *notify

- name: reconfigure-monitoring-pipeline
  plan:
  - get: pipelines-and-tasks
    passed: [reconfigure-self]
  - get: oxygen-mask
    trigger: true
  - get: ruby-alpine-image
  - task: generate-monitor-yml
    image: ruby-alpine-image
    config:
      platform: linux
      inputs:
      - name: oxygen-mask
      outputs:
      - name: oxygen-mask
      run:
        dir: oxygen-mask
        path: sh
        args:
        - -c
        - |
          erb metrics_store=wavefront monitor.yml > gen-monitor.yml
  - set_pipeline: monitoring-stats
    file: oxygen-mask/gen-monitor.yml
    vars:
      atc_url: https://hush-house.pivotal.io
      interval: 30s
      team_name: main
      pipeline_name: monitoring

- name: reconfigure-example-pipelines
  plan:
  - get: pipelines-and-tasks
    passed: [reconfigure-self]
  - get: examples
    trigger: true
  - set_pipeline: set-pipelines
    team: examples
    file: examples/pipelines/set-pipelines.yml

- name: reconfigure-prs
  plan:
  - in_parallel:
    - get: ignored
      resource: pipelines-and-tasks
      passed: [reconfigure-self]
    - get: pr-pipeline
      trigger: true
    - get: concourse-prs
      trigger: true
  - load_var: concourse_prs
    file: concourse-prs/prs.json
  - across:
    - var: pr
      values: ((.:concourse_prs))
      max_in_flight: all
    set_pipeline: pr
    team: contributor
    file: pr-pipeline/pipelines/pr.yml
    instance_vars:
      number: ((.:pr.number))
    vars:
      branch: master
      dev_image_tag: latest
      concourse_image_tag: latest
